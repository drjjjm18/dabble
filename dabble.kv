#:import randint random.randint

<SM>:
    GameScreen

<GameScreen>:
    FloatLayout:
        Deck:
            id: deck
            pos_hint: {'center_x': 0.5, 'center_y': 0.75}
            FloatLayout:
                DeckImage:
                    center: self.parent.parent.center
                    image: self.parent.parent.images[0] #self.parent.parent.im # root.images[0]
                    source: root.image_lookup[self.image] #'test.png'
        Card:
            id: card
            im: root.im
            pos_hint: {'center_x': 0.5, 'center_y': 0.25}
            FloatLayout:
                CardImage:
                    id: 'im1'
                    center: self.parent.parent.center
                    image: self.parent.parent.images[0] #self.parent.parent.im # root.images[0]
                    source: root.image_lookup[self.image]#'test.png'

        Label:
            pos_hint: {'center_x': 0.75, 'center_y': 0.3}
            text: 'Total Cards:'
        Label:
            pos_hint: {'center_x': 0.75, 'center_y': 0.25}
            text: str(card.total)

<Deck>:
    size_hint: 0.25, None
    height: self.width
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Ellipse:
            size: self.size
            pos: [self.center_x - self.width/2, self.center_y - self.height/2]

<Card>:
    size_hint: 0.25, None
    height: self.width
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Ellipse:
            size: self.size
            pos: [self.center_x - self.width/2, self.center_y - self.height/2]


<CardImage>:
    size_hint: 0.3, 0.3
    canvas.before:
        PushMatrix
        Rotate:
            angle: randint(0, 360)
            origin: self.center
    canvas.after:
        PopMatrix
<DeckImage>:
    size_hint: 0.3, 0.3
    canvas.before:
        PushMatrix
        Rotate:
            angle: randint(0, 360)
            origin: self.center
    canvas.after:
        PopMatrix